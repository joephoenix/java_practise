原型模式:
   只创建一个类实例对象，如果后面需要更多这样的实例，可以通过对原来对象拷贝一份来完成创建，
   这样在内存中不需要创建多个相同的类实例，从而减少内存的消耗和达到类实例的复用。
    
原型设计模式的例子，例如，细胞分裂的过程，一个细胞的有丝分裂产生两个相同的细胞；
还有西游记中孙悟空变出后孙的本领和火影忍者中鸣人的隐分身忍术等。

原型模式的优点有：
      原型模式向客户隐藏了创建新实例的复杂性
      原型模式允许动态增加或较少产品类。
      原型模式简化了实例的创建结构，工厂方法模式需要有一个与产品类等级结构相同的等级结构，而原型模式不需要这样。
      产品类不需要事先确定产品的等级结构，因为原型模式适用于任何的等级结构。
      
原型模式的缺点有：
    每个类必须配备一个克隆方法 配备克隆方法需要对类的功能进行通盘考虑，
    这对于全新的类不是很难，但对于已有的类不一定很容易，
    特别当一个类引用不支持串行化的间接对象，或者引用含有循环结构的时候。

在.NET中可以很容易地通过实现ICloneable接口（这个接口就是原型，提供克隆方法，
相当于与上面代码中MonkeyKingPrototype抽象类）中Clone()方法来实现原型模式。 